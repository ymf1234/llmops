from injector import Injector, inject


class A:
    name: str = "llmops"


@inject
class B:
    def __init__(self, a: A):
        self.a = a


injector = Injector()
b_instance = injector.get(B)

print(b_instance, b_instance.a.name)


def main(articleSections: list) -> dict:
    try:
        # Combine the list items into a single string with newline separators
        combined_text = "\n".join(articleSections)

        # Truncate the combined text to the first 80,000 characters
        truncated_text = combined_text[:80000]

        return {
            "result": truncated_text
        }
    except Exception as e:
        # Handle any errors and return an empty string as the result
        return {
            "result": ""
        }


articleSections = {
    "text": [
        "-- 分货\n-- 代码执行流程 php artisan allocation 10\n/*\n\n   HubAllocation-> BranchWarehouseAllocationPlanJob : 调用\n   BranchWarehouseAllocationPlanJob -> PlanParamService: 实例化\n   BranchWarehouseAllocationPlanJob -> PlanParamService.generatePlanParam:调用\n   PlanParamService.generatePlanParam 调用 PlanParamService.getPlanParamInstance : 获取工厂类 返回 实例化对象\n   StreamlineCommonPlanParamData/CommonPlanParamData 获取其他子类 -> generatePlanParamData: 生产计划参数\n   generatePlanParamData -> InventorySafetyStrategyService.getAllocationFromWmsType(分货策略id)： 返回起始仓类型\n   【\n    sql:\n            -- 判断分货起始仓类型\n            -- strategy_distribute_plan_scheme 分货策略和调拨路线关系表\n            -- distribute_plan_scheme 调拨路线\n            -- distribute_plan_scheme_item 调拨路线\n            select warehouse.warehouse_type_id\n            from strategy_distribute_plan_scheme\n            left join distribute_plan_scheme on distribute_plan_scheme.id = strategy_distribute_plan_scheme.distribute_plan_scheme_id\n            left join distribute_plan_scheme_item on distribute_plan_scheme_item.distribute_plan_scheme_id = distribute_plan_scheme.id\n            left join warehouse on warehouse.id = distribute_plan_scheme_item.from_warehouse_id\n            where strategy_distribute_plan_scheme.deleted = 0\n            and distribute_plan_scheme.deleted = 0\n            and distribute_plan_scheme_item.deleted = 0\n            and strategy_distribute_plan_scheme.inventory_safety_strategy_id = 10 limit 1;\n   】\n   generatePlanParamData -> generatePlanParamData.getSafetyStrategy(品牌ID, 分货策略id, 计划类型[分货策略表中plan_type_id字段]) : 获取分货策略 复制到全局变量 $this->safetyStrategy\n  【\n    sql:\n        select inventory_safety_strategy.*, brand.code as brand_code from inventory_safety_strategy\n        left join brand on inventory_safety_strategy.brand_id = brand.id\n        where inventory_safety_strategy.id = 10\n        and inventory_safety_strategy.brand_id = 4\n        and inventory_safety_strategy.plan_type_id = 1\n        and inventory_safety_strategy.deleted = 0;\n   】\n   generatePlanParamData -> generatePlanParamData.getDimensions(起始仓类型) : 获取数据维度($this->dataDimensions)和特征维度($this->characterDimensions)\n   【\n    参数:\n        $strategyId = $this->safetyStrategy['id'];\n        $brandId = $this->safetyStrategy['brand_id'];\n    sql:\n        select\n    inventory_safety_strategy_dimension.dimension_type as dimension_type,\n    inventory_safety_strategy_dimension.inventory_safety_dimension_type_id as inventory_safety_dimension_type_id,\n    inventory_safety_dimension_type.inventory_safety_dimension_type as inventory_safety_dimension_type,\n    inventory_safety_dimension_type.dimension_table as dimension_table,\n    inventory_safety_dimension_type.dimension_table_value_column as dimension_table_value_column,\n    inventory_safety_dimension_type.dimension_table_label_column as dimension_table_label_column\nfrom `inventory_safety_strategy_dimension`\n    left join `inventory_safety_dimension_type`\n        on `inventory_safety_strategy_dimension`.`inventory_safety_dimension_type_id` = `inventory_safety_dimension_type`.`id` and `inventory_safety_strategy_dimension`.`deleted` = '0'\nwhere `inventory_safety_strategy_dimension`.`inventory_safety_strategy_id` = '10'\n  and `inventory_safety_strategy_dimension`.`deleted` = '0'\n    // 数据维度\n    $this->dataDimensions = [\n  0 =>  [\n    \"dimension_type\" => 1\n    \"inventory_safety_dimension_type_id\" => 2\n    \"inventory_safety_dimension_type\" => 2\n    \"dimension_table\" => \"parts_substitute_group\"\n    \"dimension_table_value_column\" => \"id\"\n    \"dimension_table_label_column\" => \"name\"\n  ]\n  1 =>  [\n    \"dimension_type\" => 1\n    \"inventory_safety_dimension_type_id\" => 1\n    \"inventory_safety_dimension_type\" => 1\n    \"dimension_table\" => \"warehouse\"\n    \"dimension_table_value_column\" => \"id\"\n    \"dimension_table_label_column\" => \"name\"\n  ]\n]\n   // 特征维度\n    $this->characterDimensions = [\n          0 =>  [\n            \"dimension_type\" => 2\n            \"inventory_safety_dimension_type_id\" => 1\n            \"inventory_safety_dimension_type\" => 1\n            \"dimension_table\" => \"warehouse\"\n            \"dimension_table_value_column\" => \"id\"\n            \"dimension_table_label_column\" => \"name\"\n          ]\n          1 => [\n            \"dimension_type\" => 2\n            \"inventory_safety_dimension_type_id\" => 4\n            \"inventory_safety_dimension_type\" => 4\n            \"dimension_table\" => \"lifecycle_app\"\n            \"dimension_table_value_column\" => \"id\"\n            \"dimension_table_label_column\" => \"name\"\n          ]\n          2 =>  [\n            \"dimension_type\" => 2\n            \"inventory_safety_dimension_type_id\" => 5\n            \"inventory_safety_dimension_type\" => 5\n            \"dimension_table\" => \"parts_classify\"\n            \"dimension_table_value_column\" => \"id\"\n            \"dimension_table_label_column\" => \"name\"\n          ]\n          3 =>  [\n            \"dimension_type\" => 2\n            \"inventory_safety_dimension_type_id\" => 6\n            \"inventory_safety_dimension_type\" => 6\n            \"dimension_table\" => \"parts_classify_xyz\"\n            \"dimension_table_value_column\" => \"id\"\n            \"dimension_table_label_column\" => \"name\"\n        ]\n\n    ]\n\n   】\n\n    generatePlanParamData -> $this->mergeDimensionConfig($this->dataDimensions): 组合 $this->dimensionDataConfig\n    generatePlanParamData -> $this->mergeDimensionConfig($this->characterDimensions): 追加 $this->dimensionDataConfig\n   【\n        获取$this->dimensionDataConfig 看  $this->dimensionDataConfig();\n        $this->dimensionDataConfig = [\n  1 => array:4 [\n    \"data_method\" => Closure($brandId, $hkAllocation) {#7199\n      class: \"Modules\\Plan\\Services\\Planning\\Streamline\\StreamlineCommonPlanParamData\"\n      this: Modules\\Plan\\Services\\Planning\\Streamline\\XMStreamlinePlanParamData {#7144 …}\n      file: \"./Modules/Plan/Services/Planning/Streamline/StreamlineCommonPlanParamData.php\"\n      line: \"167 to 169\"\n    }\n    \"filter_column\" => array:2 [\n      0 => \"brand_id\"\n      1 => \"hk_allocation\"\n    ]\n    \"extension_columns\" => array:2 [\n      0 => \"name\"\n      1 => \"id\"\n    ]\n    \"table_config\" => array:6 [\n      \"dimension_type\" => 1\n      \"inventory_safety_dimension_type_id\" => 1\n      \"inventory_safety_dimension_type\" => 1\n      \"dimension_table\" => \"warehouse\"\n      \"dimension_table_value_column\" => \"id\"\n      \"dimension_table_label_column\" => \"name\"\n    ]\n  ]\n  2 => array:6 [\n    \"data_method\" => \"table\"\n    \"extension_columns\" => array:5 [\n      0 => \"name\"\n      1 => \"id\"\n      2 => \"brand_id\"\n      3 => \"app_id\"\n      4 => \"is_planningable\"\n    ]\n    \"filter_column\" => array:2 [\n      0 => \"brand_id\"\n      1 => \"is_planningable\"\n    ]\n    \"forecast_column_name\" => \"substitute_group_id\"\n    \"parts_consumption_column_name\" => \"substitute_group_id\"\n    \"table_config\" => array:6 [\n      \"dimension_type\" => 1\n      \"inventory_safety_dimension_type_id\" => 2\n      \"inventory_safety_dimension_type\" => 2\n      \"dimension_table\" => \"parts_substitute_group\"\n      \"dimension_table_value_column\" => \"id\"\n      \"dimension_table_label_column\" => \"name\"\n    ]\n  ]\n  3 => array:3 [\n    \"data_method\" => \"table\"\n    \"extension_columns\" => array:1 [\n      0 => \"app_id\"\n    ]\n    \"filter_column\" => array:1 [\n      0 => \"app_id\"\n    ]\n  ]\n  4 => array:4 [\n    \"data_method\" => \"table\"\n    \"extension_columns\" => array:1 [\n      0 => \"app_id\"\n    ]\n    \"filter_column\" => array:1 [\n      0 => \"app_id\"\n    ]\n    \"filter_deleted\" => false\n  ]\n  8 => array:3 [\n    \"data_method\" => \"table\"\n    \"extension_columns\" => array:2 [\n      0 => \"brand_id\"\n      1 => \"app_id\"\n    ]\n    \"filter_column\" => array:1 [\n      0 => \"brand_id\"\n    ]\n  ]\n  5 => array:3 [\n    \"data_method\" => \"table\"\n    \"extension_columns\" => []\n    \"filter_column\" => []\n  ]\n  7 => array:1 [\n    \"data_method\" => \"table\"\n  ]\n  6 => array:3 [\n    \"data_method\" => \"table\"\n    \"extension_columns\" => []\n    \"filter_column\" => []\n  ]\n]\n    】 \n    generatePlanParamData -> this->getDimensionData : 获取数据维度数据 $this->dataDimensionData\n    generatePlanParamData -> $this->getDimensionData : 获取特征维度数据 $this->characterDimensionData\n    【\n        -- 替换组\n            select `name`, `id`, `brand_id`, `app_id`, `is_planningable` from `parts_substitute_group` where (`brand_id` = '4' and `is_planningable` = '1') and `deleted` = '0'\n        -- 仓库\n            -- strategy_distribute_plan_scheme 分货策略中配置的调拨路线\n            -- distribute_plan_scheme 调拨路线\n            -- distribute_plan_scheme_item 调拨路线明细\n            -- warehouse 仓库\n            select distinct warehouse.id, `warehouse`.`name`, `warehouse`.`allocate_priority`, `warehouse`.`country_id`\n            from `distribute_plan_scheme_item`\n            left join `distribute_plan_scheme` on `distribute_plan_scheme_item`.`distribute_plan_scheme_id` = `distribute_plan_scheme`.`id`\n            left join `strategy_distribute_plan_scheme` on `strategy_distribute_plan_scheme`.`distribute_plan_scheme_id` = `distribute_plan_scheme`.`id` and `strategy_distribute_plan_scheme`.`deleted` = '0'\n            left join `warehouse` as `from_warehouse` on `distribute_plan_scheme_item`.`from_warehouse_id` = `from_warehouse`.`id`\n            left join `warehouse` on `distribute_plan_scheme_item`.`to_warehouse_id` = `warehouse`.`id`\n            where `distribute_plan_scheme`.`brand_id` = '4' and `warehouse`.`warehouse_status` = '2' and `strategy_distribute_plan_scheme`.`inventory_safety_strategy_id` = '10'\n            order by `warehouse`.`allocate_priority` asc\n        -- 生命周期\n            select `name`, `id`, `app_id` from `lifecycle_app` where (`app_id` = '100')\n        -- ABC 分类\n            select `name`, `id` from `parts_classify` where `deleted` = '0'\n        -- XYZ 分类\n            select `name`, `id` from `parts_classify_xyz` where `deleted` = '0'\n    】\n\n    generatePlanParamData -> $this->dataCartesianDimension : 数据维度的数据换算成笛卡尔乘积  $this->dataCartesianDimensions\n\n    generatePlanParamData -> $this->getAllPartsSubstitute : 获取替换组数据 $this->substitutes, $this->partsSubstitutes todo:: 需要优化 使用内存过大\n\n    generatePlanParamData -> $this->getAllInventory : 获取库存数据 $this->partsInventory, $this->substituteInventory todo:: 需要优化 使用内存过大\n\n    generatePlanParamData -> $this->getServiceProviderWarehouse: 获取所有的服务提供者的仓库  $this->serviceProviderWarehouse\n\n    generatePlanParamData -> $this->getAllServiceStations : 获取所有的站点  $this->serviceStations\n    generatePlanParamData -> $this->getAllServiceProviders :获取所有的服务提供者  $this->serviceProviders\n    generatePlanParamData -> $this->getStationRequirementAdjust : 品牌范围站点分货强制规则调整 $this->stationRequirementAdjust\n    generatePlanParamData -> $this->getStationPartsLimit        : 仓库组范围站点分货强制规则调整  $this->stationPartsLimit\n    generatePlanParamData -> $this->getSubstituteMasterPart  : 替换组到备件的转化  $this->substituteMasterPart \n    generatePlanParamData -> $this->getWarehouseGroupData : 仓库到仓库组的转化 $this->warehouseGroupData\n    generatePlanParamData -> $this->getMasterWarehouseToWarehouse : 仓库类型筛选主仓库到仓库的映射  $this->masterWarehouseToWarehouse\n    generatePlanParamData -> $this->getWarehouseGroup :  仓库组的默认发货配置 $this->warehouseGroupDefault \n    generatePlanParamData -> $this->getPartsProductLine : 备件的产品线信息  $this->partsProductLineData\n    generatePlanParamData -> $this->getAllPartsReverse : 获取备件在仓库要预留的库存 $this->warehousePartsReserve, $this->warehouseSubstituteReserve\n    generatePlanParamData -> this->getSubstituteWarrantyData : 替换组的保修政策 $this->substituteWarrantyData\n    generatePlanParamData -> $this->getPlanAreaStorageType : 获取要计算计划的区域库区类型 $storageTypes\n    generatePlanParamData -> $this->generatePlanParamHead : 创建计划参数 $planParamModel\n    generatePlanParamData -> $this->generatePnaPlanParam : PNA分货参数 \n    generatePlanParamData -> $this->generateUrgentPartsPlanParam : 紧急物料分货参数 \n    generatePlanParamData -> $this->generatePreWorkPlanParam : 待料分货参数 \n    generatePlanParamData -> $this->generatePlanParam : buff分货参数 \n    【\n      内部实现\n        $this->dataCartesianDimensions 循环\n            $dataDimensions = [\n                0 => array:5 [\n                    \"name\" => \"D-S040150000000024\"\n                    \"id\" => 103376\n                    \"brand_id\" => 4\n                    \"app_id\" => 100\n                    \"is_planningable\" => 1\n                ]\n                1 => array:4 [\n                    \"id\" => 416\n                    \"name\" => \"MIXTECH-003 REPAIR CENTER ROSTOV-ON-DON WAREHOUSE\"\n                    \"allocate_priority\" => 5\n                    \"country_id\" => 4\n                ]\n            ];\n\n            $columns = [\n                \"parts_substitute_group_id\" => 103376\n                \"warehouse_id\" => 416\n                ];\n            $forecastColumns = [\n                \"parts_substitute_group_id\" => 103376\n                \"warehouse_id\" => 416\n                ];\n            $consumptionColumns = [\n                \"parts_substitute_group_id\" => 103376\n                \"warehouse_id\" => 416\n                ];\n            $countryId =  4; \n            $masterDataColumn = 'parts_substitute_group_id'\n            $masterDataDimensionDataId = 103376; //替换组id \n            $dimensionData = [ // 根据主数据维度和主数据维度ID 获取对应的特征值\n                \"parts_substitute_group_id\" => 103376\n                \"parts_plan_category_id\" => 15\n                \"lifecycle_app_id\" => 5\n                \"country_id\" => 4\n                \"parts_classify_id\" => 2\n                \"parts_classify_xyz_id\" =>1\n                \"product_group_id\" => 1\n                \"is_battery\" => 0\n            ]; \n            $characters = [ // 特征维度字段\n                \"parts_substitute_group_id \" => 103376\n                \"warehouse_id\" => 416\n                \"parts_plan_category_id\" => 15\n                \"lifecycle_app_id\" => 5\n                \"country_id\" => 4\n                \"parts_classify_id\" => 2\n                \"parts_classify_xyz_id\" =>1\n                \"product_group_id\" => 1\n                \"is_battery\" => 0\n            ]\n            $masterWarehouseInfo = [ // 主仓库信息\n                    \"id\" => 3795\n                    \"name\" => \"Mixtech-003 repair center Rostov-On-Don仓库组\"\n                    \"type\" => 2\n                    \"code\" => \"Mixtech-003 repair center Rostov-On-Don仓库\"\n                    \"brand_id\" => 4\n                    \"app_id\" => 100\n                    \"master_warehouse_id\" => 416\n                    \"master_warehouse_code\" => \"MT3\"\n                    \"default_distribute_action_type_id\" => 1\n                    \"memo\" => null\n                    \"user_id\" => 59\n                    \"updated_at\" => \"2022-03-10 12:28:16\"\n                    \"created_at\" => \"2022-03-10 11:52:14\"\n                    \"deleted\" => 0\n                    \"warehouse_id\" => 416\n                    \"region_id\" => 7\n                    \"country_id\" => 4\n            ]\n    】\n\n    generatePlanParamData.generatePlanParam -> $this->getDimensionValueConfig($strategyIds, $characterDimensions) : 返回  $dimensionValueConfig\n    【\n        $otherStrategyIds // 策略Ids\n        // 特征维度\n        type : \n            1 => 仓库\n            2 => 替换组\n            3 => 备件分类\n            4 => 生命周期\n            5 => ABC分类\n            6 => XYZ分类\n\n        $characterDimensions = [\n                0 =>  [\n                    \"type\" => 1 \n                    \"type_id\" => 416\n                ]\n                1 => [\n                    \"type\" => 4\n                    \"type_id\" => 4\n                ]\n                2 => [\n                    \"type\" => 5\n                    \"type_id\" => 0\n                ]\n                3 =>  [\n                    \"type\" => 6\n                    \"type_id\" => 0\n                ]\n        ]\n\n\n        $dimensionValueConfig = [[\n  \"id\" => 1998748,\n  \"name\" => \"*--*--*--*\"\n  \"inventory_safety_strategy_id\" => 10\n  \"demand_satisfaction_rate\" => null\n  \"demand_forecast_model_id\" => 42\n  \"rop_algorithm_id\" => 2\n  \"lead_time_calculate_type\" => 1\n  \"lead_time\" => 7\n  \"hub_lead_time\" => 25\n  \"safety_inventory_calculate_type\" => 2\n  \"safety_inventory\" => 0\n  \"min_distribute_moi\" => 1.75\n  \"distribute_moi\" => 2.0\n  \"hub_min_distribute_moi\" => 0.0\n  \"hub_distribute_moi\" => 0.0\n  \"supply_chain\" => 0.0\n  \"hub_supply_chain\" => 0.0\n  \"hub_moi\" => 0.01\n  \"hub_moq\" => 1.0\n  \"global_moi\" => 0.0\n  \"global_moq\" => 0.0\n  \"return_param\" => 0.0\n  \"return_unit\" => 0.0\n  \"is_join_npi_allocation\" => null\n  \"is_join_pna_allocation\" => null\n  \"is_join_wait_material_allocation\" => null\n  \"is_join_central_reserve_allocation\" => null\n  \"is_join_buffer_allocation\" => 1\n  \"is_join_substitute_group_allocation\" => null\n  \"check_frequency\" => 2\n  \"sample_data_size\" => null\n  \"max_inventory_cycle\" => null\n  \"memo\" => null\n  \"created_at\" => \"2024-06-15 17:24:46\"\n  \"updated_at\" => \"2024-06-15 17:24:46\"\n  \"deleted\" => 0\n  \"return_moi\" => 2.0\n  \"hub_return_moq\" => 0.0\n  \"parts_available_level\" => 1.0\n  \"inventory_safety_dimension_type_0\" => 1\n  \"inventory_safety_dimension_type_id_0\" => 0\n  \"inventory_safety_dimension_type_1\" => 4\n  \"inventory_safety_dimension_type_id_1\" => 0\n  \"inventory_safety_dimension_type_2\" => 5\n  \"inventory_safety_dimension_type_id_2\" => 0\n  \"inventory_safety_dimension_type_3\" => 6\n  \"inventory_safety_dimension_type_id_3\" => 0\n]\n    】\n\n\n    generatePlanParamData.generatePlanParam -> $this->getRopi : \n    [\n      // 获取耗用的字段维度\n      $consumptionColumns = [\n        \"substitute_group_id\" => 103376\n        \"warehouse_id\" => 416\n      ]\n      // 获取预测的字段维度\n      $forecastColumns =  [\n        \"substitute_group_id\" => 103376\n        \"warehouse_id\" => 416\n      ]\n      // 分货策略维度\n      $valueConfig = [\n  \"id\" => 1998748\n  \"name\" => \"*--*--*--*\"\n  \"inventory_safety_strategy_id\" => 10\n  \"demand_satisfaction_rate\" => null\n  \"demand_forecast_model_id\" => 42\n  \"rop_algorithm_id\" => 2\n  \"lead_time_calculate_type\" => 1\n  \"lead_time\" => 7.0\n  \"hub_lead_time\" => 25\n  \"safety_inventory_calculate_type\" => 2\n  \"safety_inventory\" => 0\n  \"min_distribute_moi\" => 1.75\n  \"distribute_moi\" => 2.0\n  \"hub_min_distribute_moi\" => 0.0\n  \"hub_distribute_moi\" => 0.0\n  \"supply_chain\" => 0.0\n  \"hub_supply_chain\" => 0.0\n  \"hub_moi\" => 0.01\n  \"hub_moq\" => 1.0\n  \"global_moi\" => 0.0\n  \"global_moq\" => 0.0\n  \"return_param\" => 0.0\n  \"return_unit\" => 0.0\n  \"is_join_npi_allocation\" => null\n  \"is_join_pna_allocation\" => null\n  \"is_join_wait_material_allocation\" => null\n  \"is_join_central_reserve_allocation\" => null\n  \"is_join_buffer_allocation\" => 1\n  \"is_join_substitute_group_allocation\" => null\n  \"check_frequency\" => 2\n  \"sample_data_size\" => null\n  \"max_inventory_cycle\" => null\n  \"memo\" => null\n  \"created_at\" => \"2024-06-15 17:24:46\"\n  \"updated_at\" => \"2024-06-15 17:24:46\"\n  \"deleted\" => 0\n  \"return_moi\" => 2.0\n  \"hub_return_moq\" => 0.0\n  \"parts_available_level\" => 1.0\n  \"inventory_safety_dimension_type_0\" => 1\n  \"inventory_safety_dimension_type_id_0\" => 0\n  \"inventory_safety_dimension_type_1\" => 4\n  \"inventory_safety_dimension_type_id_1\" => 0\n  \"inventory_safety_dimension_type_2\" => 5\n  \"inventory_safety_dimension_type_id_2\" => 0\n  \"inventory_safety_dimension_type_3\" => 6\n  \"inventory_safety_dimension_type_id_3\" => 0\n]\n      // 可用库存\n      $availableQuantity = 0\n      // 最后一周是否有耗用\n      $lastWeekHaveConsumption = false\n      // 差异耗用\n      $monthConsumptionCorrect = 0\n\n\n    ]\n        \n  BranchWarehouseAllocationPlanJob -> BranchWarehouseAllocationPlanService.generateBranchWarehouseAllocationPlan : 实例化分货类（并执行分货）\n\n */"
    ]
}

output = main(articleSections)
print(output)
